// Code generated by protoc-gen-go.
// source: github.com/contetto/user-service/proto/users.proto
// DO NOT EDIT!

/*
Package users is a generated protocol buffer package.

It is generated from these files:
	github.com/contetto/user-service/proto/users.proto

It has these top-level messages:
	User
	GetReq
*/
package users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type User struct {
	ID        string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=FirstName,json=firstName" json:"FirstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=LastName,json=lastName" json:"LastName,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=Email,json=email" json:"Email,omitempty"`
	Password  string `protobuf:"bytes,5,opt,name=Password,json=password" json:"Password,omitempty"`
	AppID     string `protobuf:"bytes,6,opt,name=AppID,json=appID" json:"AppID,omitempty"`
	AppSecret string `protobuf:"bytes,7,opt,name=AppSecret,json=appSecret" json:"AppSecret,omitempty"`
	Platform  string `protobuf:"bytes,8,opt,name=Platform,json=platform" json:"Platform,omitempty"`
	Role      string `protobuf:"bytes,9,opt,name=Role,json=role" json:"Role,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetReq struct {
	ID string `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
}

func (m *GetReq) Reset()                    { *m = GetReq{} }
func (m *GetReq) String() string            { return proto.CompactTextString(m) }
func (*GetReq) ProtoMessage()               {}
func (*GetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*GetReq)(nil), "GetReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Users service

type UsersClient interface {
	Get(ctx context.Context, in *GetReq, opts ...client.CallOption) (*User, error)
	Post(ctx context.Context, in *User, opts ...client.CallOption) (*User, error)
}

type usersClient struct {
	c           client.Client
	serviceName string
}

func NewUsersClient(serviceName string, c client.Client) UsersClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "users"
	}
	return &usersClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *usersClient) Get(ctx context.Context, in *GetReq, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "Users.Get", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Post(ctx context.Context, in *User, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "Users.Post", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersHandler interface {
	Get(context.Context, *GetReq, *User) error
	Post(context.Context, *User, *User) error
}

func RegisterUsersHandler(s server.Server, hdlr UsersHandler) {
	s.Handle(s.NewHandler(&Users{hdlr}))
}

type Users struct {
	UsersHandler
}

func (h *Users) Get(ctx context.Context, in *GetReq, out *User) error {
	return h.UsersHandler.Get(ctx, in, out)
}

func (h *Users) Post(ctx context.Context, in *User, out *User) error {
	return h.UsersHandler.Post(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x4d, 0x9a, 0xa4, 0xc9, 0x1c, 0x3c, 0x0c, 0xa2, 0x4b, 0xf1, 0x20, 0x39, 0x79, 0x31,
	0x81, 0x7a, 0xf1, 0x2a, 0x54, 0x45, 0x10, 0x29, 0x11, 0x1f, 0x60, 0x1b, 0xa7, 0xba, 0x90, 0xb8,
	0x71, 0x77, 0xab, 0x6f, 0xec, 0x73, 0xb8, 0xff, 0xea, 0xa1, 0x87, 0xc0, 0x7c, 0xbf, 0x6f, 0xbe,
	0xc9, 0xec, 0xc0, 0xf2, 0x5d, 0x98, 0x8f, 0xdd, 0xa6, 0xe9, 0xe5, 0xd8, 0xf6, 0xf2, 0xd3, 0x90,
	0x31, 0xb2, 0xdd, 0x69, 0x52, 0x57, 0xf6, 0xfb, 0x16, 0x3d, 0xb5, 0x93, 0x92, 0x11, 0xe9, 0xc6,
	0xd7, 0xf5, 0x6f, 0x02, 0xd9, 0xab, 0xd5, 0x78, 0x0c, 0xe9, 0xe3, 0x8a, 0x25, 0x17, 0xc9, 0x65,
	0xd5, 0xa5, 0x62, 0x85, 0xe7, 0x50, 0xdd, 0x0b, 0xa5, 0xcd, 0x33, 0x1f, 0x89, 0xa5, 0x1e, 0x57,
	0xdb, 0x3d, 0xc0, 0x05, 0x94, 0x4f, 0x3c, 0x9a, 0x33, 0x6f, 0x96, 0x43, 0xd4, 0x78, 0x02, 0xf9,
	0xdd, 0xc8, 0xc5, 0xc0, 0x32, 0x6f, 0xe4, 0xe4, 0x84, 0x4b, 0xac, 0xb9, 0xd6, 0x3f, 0x52, 0xbd,
	0xb1, 0x3c, 0x24, 0xa6, 0xa8, 0x5d, 0xe2, 0x76, 0x9a, 0xec, 0xef, 0x8b, 0x90, 0xe0, 0x4e, 0xb8,
	0x0d, 0x2c, 0x7d, 0xa1, 0x5e, 0x91, 0x61, 0xf3, 0xb0, 0x01, 0xdf, 0x03, 0x3f, 0x6f, 0xe0, 0x66,
	0x2b, 0xd5, 0xc8, 0xca, 0x38, 0x2f, 0x6a, 0x44, 0xc8, 0x3a, 0x39, 0x10, 0xab, 0x3c, 0xcf, 0x94,
	0xad, 0x6b, 0x06, 0xc5, 0x03, 0x99, 0x8e, 0xbe, 0x0e, 0x5f, 0xba, 0xbc, 0x81, 0xdc, 0x5d, 0x40,
	0xe3, 0x19, 0xcc, 0x6c, 0x0b, 0xce, 0x9b, 0xd0, 0xb8, 0xc8, 0x1b, 0xc7, 0xeb, 0x23, 0x3c, 0x85,
	0x6c, 0x2d, 0xb5, 0xc1, 0x00, 0xfe, 0xf9, 0xa6, 0xf0, 0x37, 0xbc, 0xfe, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0xd6, 0x2a, 0x4a, 0x7d, 0x79, 0x01, 0x00, 0x00,
}
